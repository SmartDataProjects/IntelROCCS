#!/bin/bash
# --------------------------------------------------------------------------------------------------
# data_dealerd  Startup script for the data dealer package
#
# chkconfig: - 70 15
# description: Data Dealer is a process which decides if a CMS dataset needs to be replicated
#              It also selects an appropriate destination site
#
# processname: data_dealerd
# config:      /etc/data_dealerd.conf
# pidfile:     /var/run/data_dealerd.pid
#
# B.Barrefors
# --------------------------------------------------------------------------------------------------

# TODO: (10) Set up daemon/run as service

# set up variables
#=================
# Source function library.
source /etc/rc.d/init.d/functions

# grab variables from config file
configfile_secured=/etc/data_dealer.conf
source $configfile_secured

# path to the running script, server binary, and short-form for messages.
data_dealerd=$install_path/data_dealerd
prog=data_dealerd
pidfile="/var/run/data_dealerd.pid"
lockfile="/var/lock/subsys/data_dealerd"

RETVAL=0


# Start data dealer daemon (data_dealerd)
#========================================
start() {
    echo -n $"Starting $prog:"
    daemon "--user=$intelroccs_user" "--pidfile=$pidfile" "$data_dealerd" \&
    RETVAL=$?
    echo
    [ $RETVAL = 0 ] && touch "$lockfile"

    pid=$(pgrep -f "/bin/bash $data_dealerd")
    echo "$pid" > "$pidfile"

    return $RETVAL
}


# Stop data dealer daemon (data_dealerd)
#=======================================
stop() {
    echo -n $"Stopping $prog: "
    killproc -p "$pidfile" "$data_dealerd"
    RETVAL=$?
    echo
    [ $RETVAL = 0 ] && rm -f "$lockfile" "$pidfile"
}


# See how we were called
#=======================
case $1 in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status -p "$pidfile" "$data_dealerd"
        RETVAL=$?
        ;;
    restart)
        stop
        start
        ;;
    condrestart|try-restart)
        if status -p "$pidfile" "$data_dealerd" >&/dev/null
        then
            stop
            start
        fi
        ;;
    *)
        echo "Usage: $prog {start|stop|restart|status|help}"
        RETVAL=2
esac

# done
exit $RETVAL
