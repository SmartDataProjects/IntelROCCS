#!/bin/bash
# --------------------------------------------------------------------------------------------------
# data_dealer_testd  Startup script for the data dealer test package
#
# chkconfig: - 70 15
# description: Data Dealer is a process which decides if a CMS dataset needs to be replicated
#              It also selects an appropriate destination site
#              This is a test daemon for the real Data Dealer
#
# processname: data_dealer_testd
# config:      /etc/data_dealer_testd.conf
# pidfile:     /var/run/data_dealer_testd.pid
#
# B.Barrefors
# --------------------------------------------------------------------------------------------------

# set up variables
#=================
# Source function library.
source /etc/rc.d/init.d/functions

# grab variables from config file
configfile_secured=/etc/data_dealer_test.conf
source $configfile_secured

# path to the running script, server binary, and short-form for messages.
data_dealer_testd=$install_path/data_dealer_testd
prog=data_dealer_testd
pidfile="/var/run/data_dealer_testd.pid"
lockfile="/var/lock/subsys/data_dealer_testd"

RETVAL=0


# Start data dealer test daemon (data_dealer_testd)
#========================================
start() {
    echo -n $"Starting $prog:"
    daemon "--user=$intelroccs_user" "--pidfile=$pidfile" "$data_dealer_testd" \&
    RETVAL=$?
    echo
    [ $RETVAL = 0 ] && touch "$lockfile"

    pid=$(pgrep -f "/bin/bash $data_dealer_testd")
    echo "$pid" > "$pidfile"

    return $RETVAL
}


# Stop data dealer test daemon (data_dealer_testd)
#=======================================
stop() {
    echo -n $"Stopping $prog: "
    killproc -p "$pidfile" "$data_dealer_testd"
    RETVAL=$?
    echo
    [ $RETVAL = 0 ] && rm -f "$lockfile" "$pidfile"
}


# See how we were called
#=======================
case $1 in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status -p "$pidfile" "$data_dealer_testd"
        RETVAL=$?
        ;;
    restart)
        stop
        start
        ;;
    condrestart|try-restart)
        if status -p "$pidfile" "$data_dealer_testd" >&/dev/null
        then
            stop
            start
        fi
        ;;
    *)
        echo "Usage: $prog {start|stop|restart|status|help}"
        RETVAL=2
esac

# done
exit $RETVAL
