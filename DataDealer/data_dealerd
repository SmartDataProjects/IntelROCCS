#!/bin/bash
# --------------------------------------------------------------------------------------------------
# Process to keep data dealer alive and well.
#
# B.Barrefors
# --------------------------------------------------------------------------------------------------

# set up variables
#=================
# grab variables from config file
configfile_secured=/etc/data_dealer.conf
source $configfile_secured


# always run on the same time
#============================
today=$(date -d "now" +%Y/%m/%d)
run_time=$(date -d "$today 03:00" +%s)
current_time=$(date -d "now" +%s)
time_to_wait=$((run_time - current_time))
if [ $time_to_wait -le 0 ]
then
    tomorrow=$(date -d "tomorrow" +%Y/%m/%d)
    run_time=$(date -d "$tomorrow 03:00" +%s)
    current_time=$(date -d "now" +%s)
    time_to_wait=$((run_time - current_time))
fi

sleep $time_to_wait

# generate specific log file
tag=$(date "+%Y%m%d")
log_file=$data_path/Logs/data_dealer-$tag.log
touch "$log_file"

# start by running the weekly dealer once
{
    echo " "
    echo " weekly data dealer started -- $tag "
    echo " "
    echo "   --> $today"
    echo " "
} >> "$log_file"
stdbuf -o0 -e0 "$install_path/weeklyDealer.py" >> "$log_file" 2>&1

# run daily script
#=================
while [ 1 ]
do
    for index in {0..6}
    do
        # get the start time of the script
        secs=$(date +%s --date="now")
        run_time=$(date '+%s' --date="@$((secs + 24*60*60))")

        # generate specific log file
        tag=$(date "+%Y%m%d")
        old_tag=$(date '+%Y%m%d' --date="@$((secs - num_log_files*24*60*60))")
        log_file=$data_path/Logs/data_dealer-$tag.log
        old_log_file=$data_path/Logs/data_dealer-$old_tag.log
        touch "$log_file"
        rm -f "$old_log_file"
        today=$(date)

        for index_2 in {0..23}
        do
            secs=$(date +%s --date="now")
            run_time_2=$(date '+%s' --date="@$((secs + 1*60*60))")
            {
                echo " "
                echo " site monitor started -- $tag "
                echo " "
                echo "   --> $today"
                echo " "
            } >> "$log_file"
            stdbuf -o0 -e0 "$install_path/siteMonitor.py" >> "$log_file" 2>&1
            current_time_2=$(date -d "now" +%s)
            time_to_wait_2=$((run_time_2 - current_time_2))
            sleep $time_to_wait_2
        done

        {
            echo " "
            echo " daily data dealer started -- $tag "
            echo " "
            echo "   --> $today"
            echo " "
        } >> "$log_file"
        stdbuf -o0 -e0 "$install_path/dailyDealer.py" >> "$log_file" 2>&1

        {
            echo " "
            echo " visualization data collector started -- $tag "
            echo " "
            echo "   --> $today"
            echo " "
        } >> "$log_file"
        stdbuf -o0 -e0 "$install_path/visualizationData.py" >> "$log_file" 2>&1

        if [ $index -eq 6 ]
        then
            {
                echo " "
                echo " weekly data dealer started -- $tag "
                echo " "
                echo "   --> $today"
                echo " "
            } >> "$log_file"
            stdbuf -o0 -e0 "$install_path/weeklyDealer.py" >> "$log_file" 2>&1
        fi


        # ensure that the log and report information is updated
        rsync -Cavz --delete "$data_path" "$html_path" >& /dev/null

        # change symlinks for todays report and log
        ln -sf "$html_path/DataDealer/Logs/data_dealer-$tag.log" "$html_path/DataDealer/Logs/data_dealer-latest.log"
        ln -sf "$html_path/DataDealer/Reports/data_dealer-$tag.report" "$html_path/DataDealer/Reports/data_dealer-latest.report"
        ln -sf "$html_path/DataDealer/Progress/data_dealer-$tag.progress" "$html_path/DataDealer/Progress/data_dealer-latest.progress"

        # calculate the time until next run should start
        current_time=$(date -d "now" +%s)
        time_to_wait=$((run_time - current_time))
        sleep $time_to_wait
    done
done

# done
exit 0;
